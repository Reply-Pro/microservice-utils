name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '**'

jobs:
  checks:
    name: "ðŸ”Ž Test and Lint"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            test-requirements.txt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            test-requirements.txt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            test-requirements.txt

      - run: |
          pip install nox

      - name: Check formatting
        run: nox --non-interactive -e format -- --check

      - name: Run linter
        run: nox --non-interactive -e lint

      - name: Test
        run: nox -e test

  release:
    needs: [ checks ]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    name: ðŸ“¦ PyPi Release
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            test-requirements.txt

      - name: Install pypa/build
        run: |
          python -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/ .

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
